name: EventWar
version: 0.01
language: english
author: LlmDl
website: 'http://townyadvanced.github.io/'
description: >
    Language file for all game messages.  Do not alter this file.
    If you wish to change any of the entries, make a copy named something else.
    Alternate language files can be enabled by altering the
    [language] entry in config.yml
#
#
#         You MUST retain spacing in the texts.
#  If a text begins or ends with a space, it must remain that way.
#
#
#       %s = data to be supplied by the plugin.

# Text colouring
# --------------
# Black = &0, Navy = &1, Green = &2, Blue = &3, Red = &4
# Purple = &5, Gold = &6, LightGray = &7, Gray = &8
# DarkPurple = &9, LightGreen = &a, LightBlue = &b
# Rose = &c, LightPurple = &d, Yellow = &e, White = &f

plugin_prefix: '&f[&6EventWar&f] '
msg_err_command_disable: '&cYou don''t have enough permissions for that command.'
msg_err_x_war_type_is_disabled: 'The war type: %s is disabled in the config.'

#Message show when a town survives a CivilWar or TownWar
msg_war_surviving_town_spoils: '&6[War]&b Surviving Town: %s won %s.'
#Message show when a nation survives a WorldWar or NationWar
msg_war_surviving_nation_spoils: '&6[War]&b Surviving Nation: %s won %s.'
#Message show when paying the highest scorer in a Riot war.
msg_war_riot_highest_score: '&6[War]&b Riot Winner: %s won %s with a score of %s.'
#Message shown when an admin does /ta toggle war {WARNAME} to end a war.
msg_war_name_ended: '&6[War]&b %s ended via admin command.'
#Messages shown when a war does not exist with the given name.
msg_err_unknown_war: 'No war is known by the name: %s'
#Message shown when a town is joined into a war.
msg_you_have_joined_a_war_of_type: 'You have joined a war of type: %s.'
#The message shown to attackers when a townblock is being attacked.
msg_war_townblock_hp: '&8[%s] (%s) HP: %s %s'
#The message shown when a townblock is being healed.
msg_war_townblock_healed: '&8[Heal](%s) HP: %s (&a+%s&8)'
#Message shown when a town is removed from the war for not being able to pay death costs.
msg_town_could_not_pay_death_costs_removing_from_war: '%s could not pay death costs to %s, removing %s from the war.'
#Message shown when a player has run out of lives and is removed from the war
msg_resident_has_run_out_of_lives_and_is_eliminated_from_the_war: '%s has run out of lives and is eliminated from the %s'
#Message shown when a player chooses to fight for the rebels in war.
msg_you_have_sided_with_the_rebels: 'You have sided with the rebels.'
#Message shown when a player chooses to fight for the government in war.
msg_you_have_sided_with_the_government: 'You have sided with the government.'
#Message shown when a player cannot pay the war death price during a RIOT war, and they are eliminated.
msg_player_couldnt_pay_eliminated_riot: '%s''s wallet couldn''t satisfy %s. Removing them from the riot.'
#Message shown announcing the delay for team selection for civilwar and riots.
msg_team_selection_delay_seconds_remaining: '&4%s remain to choose between the government and anti-government sides.'
#Message shown when players must choose between state or rebel in RIOT and CIVILWAR wars.
msg_which_side_will_you_choose: 'You must side with the nation/city or the rebels. Which side will you choose?'
#Message shown on a new day to a town or nation, awarding a war token.
msg_war_token_received: 'Because of non-peaceful status, %s has received a war token.'
#Message shown when a command is used from the console, which must be run by a player.
msg_not_for_console: 'This command is not meant to be used from console.'
#Message shown when a player tries to use a non-existant war name.
msg_invalid_war_type: 'Invalid war type.'
#Message shown when a player does not have enough war tokens to purchase a declaration.
msg_not_enough_tokens_to_purchase_war: 'Not enough tokens to purchase that declaration of war! You require %s tokens.'
#Message shown when a player has purchased a declaration of war.
msg_town_purchased_declaration_of_type: '%s has purchased one Declaration of War of type: %s'
#Message shown in the confirmation before a town purchases a declaration of war.
msg_you_are_about_to_purchase_a_declaration_of_war_of_type_for_x_tokens: 'You are about to purchase a declaration of war of type %s for %s tokens. Are you sure?'

#Message confirming wars are purged from database.
msg_wars_purged: 'Wars have been purged.'
#Message shown when a war has been started and the original countdown is about to start.
msg_beginning_x_war_in_x_seconds: 'Beginning %s in %s seconds.'
#Message shown in war participants command when there are no wars.
msg_there_are_no_wars: 'There are no ongoing wars!'
#Message shown for war stats and scores commands when the command runner has no war.
msg_you_do_not_have_a_war: 'You do not have a war!'


msg_war_eliminated: '&6[War]&b %s was eliminated from the war.'
msg_war_forfeited: '&6[War]&b %s forfeited.'
msg_war_join: '&6[War] &b%s joined the fight!'
msg_war_join_forced: '&6[War]&b The nation of %s has been forced into war due to global settings!'
msg_war_join_nation: '&6[War]&b The nation of %s has joined the war!'
msg_war_lose_block: '&6[War]&b (%s) belonging to %s has fallen.'
msg_war_score: '&6[War]&b %s scored %d points!'
msg_war_score_nation_elim: '&6[War]&b %s was awarded %d points for eliminating the nation %s!'
msg_war_score_town_elim: '&6[War]&b %s was awarded %d points for eliminating the town %s! (%d town blocks captured)'
msg_war_score_townblock_elim: '&6[War]&b %s was awarded %d points for eliminating the town block %s!'
msg_war_score_player_kill: '&6[War]&b %s killed %s. (%d points for %s)'
msg_war_score_player_kill_defending: '&6[War]&b %s killed %s while %s was defending. (%d points for %s)'
msg_war_king_killed: '&6[War]&b %s''s king was killed!'
msg_war_mayor_killed: '&6[War]&b %s''s mayor was killed!'
msg_war_winning_nation_spoils: '&6[War]&b Winning Nation: %s won %s.'
msg_war_winning_town_spoils: '&6[War]&b Highest Score: %s won %s with the score %d.'
msg_war_cannot_do: '&cYou cannot do this when the world is at war.'
msg_war_started: '&eStarted the war countdown.'

msg_err_warzone_cannot_edit_material: '&cCannot %s %s in warzone.'
msg_err_warzone_cannot_use_switches: '&cCannot use switches in warzone.'
msg_err_warzone_cannot_use_item: '&cCannot use this item in a warzones.'

msg_war_a_player_has_no_town: '&6[War]&f One of the players in combat has no town and cannot interfere during the War Event.'
msg_war_a_player_has_no_nation: '&6[War]&f One of the players in combat has a town without a nation and cannot interfere during the War Event.'
msg_war_a_player_has_a_neutral_nation: '&6[War]&f One of the players in combat is part of a neutral nation and cannot interfere during the War Event.'
msg_war_a_player_has_been_removed_from_war: '&6[War]&f One of the players in combat is part of a town which cannot interfere with the War Event.'
msg_war_a_player_is_an_ally: '&6[War]&f One of the players in combat considers the other an ally.'
msg_war_a_player_has_no_town: '&6[War]&f One of the players in combat has no town and cannot interfere during the War Event.'
msg_war_a_player_has_no_nation: '&6[War]&f One of the players in combat has a town without a nation and cannot interfere during the War Event.'
msg_war_a_player_has_a_neutral_nation: '&6[War]&f One of the players in combat is part of a neutral nation and cannot interfere during the War Event.'
msg_war_a_player_has_been_removed_from_war: '&6[War]&f One of the players in combat is part of a town which cannot interfere with the War Event.'
msg_war_a_player_is_an_ally: '&6[War]&f One of the players in combat considers the other an ally.'
msg_err_wartime_could_not_take_deathfunds: 'Could not take wartime death funds.'

msg_war_seeding_spoils_with: '&6[War]&f Seeding spoils of war with %s'
msg_war_total_seeding_spoils: '&6[War]&f Total spoils of war at play for this war: %s'
msg_war_activate_war_hud_tip: '&6[War]&f Use ''/towny war hud'' to activate the War hud.'
msg_war_town_under_attack: '&8Your town is under attack!'
msg_war_nation_under_attack: '&8Your nation is under attack!'
msg_war_nations_ally_under_attack: '&8Your nation''s ally %s, is under attack!'
msg_war_homeblock_under_attack: '&8Your town''s homeblock is under attack!'
msg_war_nation_member_homeblock_under_attack: '&8Your nation member %s''s townblock is under attack!'
msg_war_nation_ally_homeblock_under_attack: '&8Your nation''s ally %s''s homeblock is under attack!'
msg_war_town_ran_out_of_money: 'Your town ran out of funds to support itself in war.'
msg_war_town_lost_money_townblock: 'Your town lost %s.'
msg_war_jailbreak: '&6[War]&f There has been a jailbreak in %s, freeing %s prisioner(s)!'
msg_war_town_removed_from_war_titlemsg: 'Your town has been removed from the war'
msg_war_nation_removed_from_war_titlemsg: 'Your nation has been removed from the war'
msg_war_append_townblocks_fallen: ' town blocks fallen)'

war_hud_homeblock: 'HOMEBLOCK'
war_hud_wilderness: 'Wilderness'
war_hud_true: 'True'
war_hud_false: 'False'
war_hud_peaceful: 'Peaceful'
war_hud_fallen: 'Fallen'
war_hud_townless: 'Townless!'
war_hud_war: 'War'
war_hud_score: 'Score: '
war_hud_location: 'Location'
war_hud_nation: 'Nation: '
war_hud_town: 'Town: '
war_hud_attackable: 'Attackable: '
war_hud_health: 'Health: '
war_hud_top_towns: 'Top Towns'
war_hud_top_residents: 'Top Residents'
war_stats_nations: '  Nations: '
war_stats_towns: '  Towns: '
war_stats_residents: '  Residents: '
war_stats_warzone: '  WarZone: '
war_stats_spoils_of_war: '  Spoils of War: '
war_starts_in_x: '&4War starts in %s'

msg_war_not_enough_nations: '&6[War]&f Less than 2 nations gathered for war, war canceled.'
msg_war_no_enemies_for_war: '&6[War]&f No enemies presently gathered for war, war canceled.'
msg_war_prefix: '&6[War]&f '
msg_war_participants_header: '&6[War] &eNation Name &f(&bTowns&f)'
msg_war_participants: '&6[War] &e%s &f(&b%s&f)'
msg_war_participants2: '&6[War] &e%s &f(&b%s&f) &f(&b%s&f)'
msg_war_participants_civilwar_header: '&6[War] &eTown Name &f(&bResidents&f) &f(&bSide&f)'
msg_war_participants_townwar_header: '&6[War] &eTown Name &f(&bResidents&f)'
msg_war_participants_riot_header: '&6[War] &eResident Name &f(&bLives&f) &f(&bSide&f)'
msg_war_name_participants: '%s Participants'

#Shown when a nation has its neutrality switch off because nations aren't allowed to be neutral.
msg_neutrality_removed: 'Your nation is unable to stay neutral for the coming war!'
#Shown when a late-comer joins a riot or civil war for the government:
msg_latecomer_x_has_sided_with_the_gov: 'Late-comer to the war, %s, has sided with the government.'
#Shown when a late-comer joins a riot or civil war for the rebels:
msg_latecomer_x_has_sided_with_the_reb: 'Late-comer to the war, %s, has sided with the rebels.'

#Shown when a war ends with no scoring having happened.
msg_no_one_scored_during_the_war: 'No one scored during the war, thus there is no lasting aftermath.'
#Shown when townconquering is true and a riot ends with the mayor winning.
msg_mayor_retains_control_of_the_city: '%s has received the high score and secured the end of the riot. No new mayor for %s.'
#Shown when townconquering is true and a riot ends with the mayor losing to a new mayor.
msg_new_mayor_has_become_the_new_mayor_of: 'The riot has ended with %s taking over as acting mayor of %s.'
#Shown when townconquering is true and a civil ends with the king winning.
msg_king_retains_control_of_the_nation: '%s has secured the nation of %s, ending the civil war. The capital remains charge of the nation.'
#Shown when townconquering is true and a civil ends with the king losing and a new capital is chosen.
msg_new_king_has_become_the_new_king_of: '%s has defeated the capital in the civil war, now %s is the capital city of %s.'
#Shown when townconquering is true and a townwar has ended with the losing town being absorbed by the winning town.
msg_town_has_fallen_and_is_being_absorbed_by_the_winning_town: 'The town of %s has lost, and is being taken over by %s.'
#Shown when a riot war ends because all the rioters are in jail.
msg_riot_over_all_rioters_are_in_jail: 'All of the rioters are either dead or locked in jail. Riot over.'
#Shown when an admin sets a town's war tokens.
msg_town_tokens_set_to: '%s has had their tokens set to: %s.'

#War Confirmation Messages

#Message shown in the confirmation when a player starts a riot.
player_are_you_sure_you_want_to_start_a_riot: 'Are you sure you want to start a riot in your city?'
#Message shown in the confirmation when a player starts a town war.
player_are_you_sure_you_want_to_start_a_townwar: 'Are you sure you want to start a war between your town and %s?'
#Message shown in the confirmation when a player starts a civil war.
player_are_you_sure_you_want_to_start_a_civilwar: 'Are you sure you want to plunge your nation into civil war?'
#Message shown in the confirmation when a player starts a nation war.
player_are_you_sure_you_want_to_start_a_nationwar: 'Are you sure you want to start a war between your nation and %s?'
#Message shown in the confirmation when a player starts a world war.
player_are_you_sure_you_want_to_start_a_worldwar: 'Are you sure you want to set off a world war?'

#Message shown when a player is unable to begin a war, because they don't have a Declaration Of War.
msg_err_you_are_not_holding_dow: 'Unable to start war, you are not holding a Declaration of War.'
#Message shown when a player is unable to begin a war, because they don't have the correct type of Declaration Of War.
msg_err_you_are_not_holding_correct_dow: 'Unable to start war, you are not holding the correct type of Declaration of War.'
#Message shown when a player is unable to begin a war, because the DoW they hold was bought by a deleted town.
msg_err_dow_owner_no_longer_exists: 'This Declaration of War was bought by a town which no longer exists.'
#Message shown when a player is unable to begin a war, because the DoW they was bought by another town.
msg_err_dow_owner_not_your_town: 'This Declaration of War was bought by another town, your town may not use it.'

#Message shown when a town has been conquered by a nation for a number of days.
msg_war_town_has_been_conquered_by_nation_x_for_x_days: 'The town %s has been conquered by the nation %s for %s days.'
#Message shown when a town has been conquered by a nation for an unlimited amount of days.
msg_war_town_has_been_conquered_by_nation_x_forever: 'The town %s has been conquered by the nation %s for an unlimited amount of time.'

#Error Message shown when a war is declared on a neutral town or nation.
msg_err_cannot_declare_war_on_neutral: 'You cannot declare war on a neutral town/nation.'

#Error message shown when there aren't enough people online for a riot war.
msg_err_not_enough_people_online_for_riot: 'There are not enough people online in your town, for the riot to begin, %s required.'
#Error message shown when there aren't enough people online for a town war.
msg_err_not_enough_people_online_for_townwar: 'There are not enough people online in each town, for the town war to begin, %s required in both towns.'
#Error message shown when there aren't enough people online for a civil war.
msg_err_not_enough_people_online_for_civilwar: 'There are not enough people online in your nation, for the nation war to begin, %s required.'
#Error message shown when there aren't enough people online for a nation war.
msg_err_not_enough_people_online_for_nationwar: 'There are not enough people online in each nation, for the nation war to begin, %s required in both towns.'

#Error message shown when a town with no nation tries to redeem tokens for a war type that requires a nation.
msg_err_you_need_a_nation_to_redeem_for_type: 'Your town needs to be part of a nation in order to redeem tokens for a war declaration of type %s.'

#Message shown when a conquered town is denied the ability to do something.
msg_you_cannot_do_that_while_conquered: 'You cannot do that while your town is conquered.'

#Message shown when /ta reload event is used successfully.
msg_event_war_has_been_reloaded: 'EventWar has Successfully reloaded.'

#Message shown when a war ends.
msg_event_war_has_ended: 'The %s has ended.'

#Message shown to the surrendering player when their surrender has been accepted.
msg_surrender_accepted: 'Your surrender has been accepted.'
#Message shown to the surrendering player when their surrender was denied.
msg_surrender_denied: 'Your surrender has been rejected.'
#Message shown to the player who has accepted a surrender.
msg_surrender_accepted_receiver: 'You accepted %s''s surrender.'
#Message shown to the player who has denied a surrender.
msg_surrender_denied_receiver: 'You denied %s''s surrender.'
#Message shown to the surrendering player when their surrender cannot be accepted because the player is offline.
msg_could_not_surrender: 'The player %s is not online to accept your surrender.'
#Message shown to the surrendering player when their surrender cannot be accepted because the player is invalid.
msg_could_not_surrender_invalid: 'The player in control of the opposite side could not be determined, unable to surrender. This should be reported.'
#Message shown when a town cannot surrender because they lack the funds
msg_could_not_surrender_money: '%s does not have enough money in the bank to surrender: %s.'
#Message shown when a town/nation pays to surrend.
msg_town_paid: '%s has paid %s to forfeit in war.'
#Message shown when a town could not be forfeited in a surrender deal.
msg_town_could_not_be_transferred: 'The town % could not be transferred, the surrender is cancelled.'
#Message shown when a town offers either money or towns for peace.
msg_single_trade_for_peace: '%s is offering %s in order for the war to end.'
#Message shown when a town offers towns and money for peace.
msg_money_and_towns_for_peace: '%s is offering %s and %s in order for the war to end.'
#Message shown when peace is asked for nothing in return.
msg_white_peace: '%s is asking for peace.'
#Message shown in the surrender confirmation.
msg_will_you_accept_their_surrender: 'Will you accept %s''s surrender?'

#Message shown when a player cannot surrender in war because of the war type doesn't allow surrender.
msg_err_you_are_not_allowed_to_surrender_this_war_type: 'You are not allowed to surrender in war of type: %s'
#Message shown when a player ends up with an empty town list for a Surrender.
msg_err_unable_to_surrender_any_of_those_towns: 'You are unable to offer any of those Towns in surrender.'
#Message shown when a player already has a pending surrender.
msg_err_you_already_have_a_pending_surrender: 'You already have a pending surrender offer.'
#Message shown when a player makes a surrender with no offers (white peace.)
msg_surrender_offer_made: 'You have offered a white peace surrender.'
#Message shown when a player makes a surrender for money.
msg_surrender_offer_made_for_money: 'You have made an offer to surrender for %s.'
#Message shown when a player makes a surrender for money and towns.
msg_surrender_offer_made_for_money_and_towns: 'You have made an offer to surrender for %s and the following towns: %s.'
#Message shown when a player makes a surrender for towns.
msg_surrender_offer_made_for_towns: 'You have made an offer to surrender for the following towns: %s.'
#Message shown when a player tries to create a surrender for towns, but the war type doesn't support it.
msg_surrendering_towns_not_allowed_for_this_war_type: 'You are unable to offer towns in surrender for this war type.'
#Message shown when a player who is not the leader tries to surrender.
msg_not_the_leader: 'You are not the leader, you cannot surrender.'
#Message shown to a player confirming they want to surrender a riot, civil war or world war.
msg_are_you_sure_you_want_to_surrender: 'Are you sure you want to surrender from the war?'

#Message shown when a player is given a copy of the EventWar guidebook.
msg_you_have_received_the_eventwar_guidebook: 'You have received the EventWar guidebook.'
#Message when an admin gives a life to a player.
msg_you_have_given_one_life_to_x: 'You have given a life to %s.'
#Message shown to the player when an admin gives a life to a player.
msg_you_have_received_one_life: 'You have received one additional life.'
#Message when an admin gives lives to a player.
msg_you_have_given_x_lives_to_x: 'You have given %d lives to %s.'
#Message shown to the player when an admin gives lives to a player.
msg_you_have_received_x_lives: 'You have received %d additional lives.'
#Messsage shown when a player has no war.
msg_err_the_player_has_no_war: 'That player has no war.'
#Message shown when a totem of undying is prevented from being used.
msg_err_unable_to_use_totems_in_warring_towns: 'You are unable to use Totems of Undying in warring Towns.'

#Message shown when joining a town is denied, because that town is at war.
msg_err_cannot_join_town_with_active_war: 'You cannot join this town because they are at war.'
#Message shown when joining a nation is denied, because that nation is at war.
msg_err_cannot_join_nation_with_active_war: 'You cannot join this nation because they are at war.'